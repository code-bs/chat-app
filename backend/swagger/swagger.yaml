openapi: "3.0.0"
info:
  title: CodeBS Chat App
  description: CodeBS 채팅 웹 어플리케이션 - API 명세
  version: 0.1.0

servers:
  - url: http://localhost:3000
    description: Local

paths:
  /chat/room:
    get:
      summary: 모든 방 목록을 반환
      tags: [Chat]
      responses:
        "200":
          description: 모든 방 목록
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/room"
    post:
      summary: 새로운 방 생성
      tags: [Chat]
      requestBody:
        description: Request Body 정의
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createroom"
      responses:
        "200":
          description: 생성한 방 정보
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/room"
  /chat/room/enter/{roomId}:
    get:
      summary: 방 고유 번호가 roomId 인 방에 입장
      tags: [Chat]
      parameters:
        - in: path
          name: roomId
          schema:
            type: string
          required: true
          description: 방 고유 번호
      responses:
        200:
          description: 입장한 방 id와 채팅 기록 배열
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    description: 방 고유 번호
                  chatHistory:
                    type: array
                    description: 채팅 기록
  /auth/login:
    post:
      summary: 로그인
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: 로그인 아이디
                password:
                  type: string
                  description: 패스워드
      responses:
        200:
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToekn:
                    type: string
  /user:
    post:
      summary: 회원가입
      tags: [User]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/newuser"
      responses:
        200:
          description: 회원 가입 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
        400:
          description: "중복된 아이디"
  /user/{userId}:
    get:
      summary: 유저 검색
      tags: [User]
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: 검색하는 유저 아이디
      responses:
        200:
          description: 유저 검색 결과
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
  /user/friend:
    post:
      summary: 친구 추가
      tags: [User]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userSeqno:
                  type: number
                  description: 본인 고유 번호
                friendId:
                  type: string
                  description: 추가하고자 하는 유저 로그인 아이디
      responses:
        200:
          description: 친구 추가 성공
  /user/friend/{userSeqno}:
    get:
      summary: 친구 검색
      tags: [User]
      parameters:
        - in: path
          name: userSeqno
          schema:
            type: number
          required: true
          description: 유저 고유 번호
      responses:
        200:
          description: 친구 목록
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/friendList"
components:
  schemas:
    room:
      type: object
      properties:
        _id:
          type: string
        roomName:
          type: string
        regDate:
          type: string
        masterUserId:
          type: string
        chatHistory:
          $ref: "#/components/schemas/chatHistory"
    user:
      type: object
      properties:
        userSeqno:
          type: number
        userId:
          type: string
        nickname:
          type: string
    createroom:
      type: object
      properties:
        roomName:
          type: string
          description: 사용자가 입력한 방 이름
        userId:
          type: string
          description: 요청한 유저의 고유 번호
    chatHistory:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            description: 채팅 로그 고유 번호
          message:
            type: string
            description: 채팅 메시지 내용
          regDate:
            type: string
            description: 등록일
          userId:
            type: string
            description: 유저 아이디
    newuser:
      type: object
      properties:
        userId:
          type: string
          description: 로그인 아이디
        password:
          type: string
          description: 로그인 패스워드
        nickname:
          type: string
          description: 닉네임
    friendList:
      type: array
      items:
        $ref: "#/components/schemas/user"
