openapi: "3.0.0"
info:
  title: CodeBS Chat App
  description: CodeBS 채팅 웹 어플리케이션 - API 명세
  version: 0.1.0

servers:
  - url: http://localhost:3000
    description: Local

paths:
###### TAG CHAT ######
# 1. 방 만들기
  /chat/room:
    post:
      summary: 새로운 방 생성
      tags: [Chat]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roomName:
                  type: string
      responses:
        "200":
          description: 생성된 방 정보 (Object)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/room"
        "400":
          description: roomName 을 지정하지 않았거나, 4~20 자가 아닐 경우
        "500":
          description: 서버 내부 오류
# 2. 방 리스트 가져오기
    get:
      summary: 회원이 입장해 있는 방 리스트 받기
      tags: [Chat]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      responses:
        "200":
          description: 모든 방 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/room"

      responses:
        "200":
          description: 생성한 방 정보
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/room"
# 3. 방에서 나가기
    delete:
      summary: 방에서 나가기
      tags: [Chat]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roomId:
                  type: string
                  description: 방 고유 아이디
      responses:
        "200":
          description: 성공
        "400":
          description: roomId 가 누락되었을 경우
# 4. 받은 초대 목록 가져오기
  /chat/invitation/got:
    get:
      summary: 받은 채팅방 초대 목록 가져오기
      tags: [Chat]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      responses:
        200:
          description: 초대 받은 방 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sender:
                      $ref: "#/components/schemas/user"
                    room:
                      $ref: "#/components/schemas/room"
                    curStatus:
                      type: string
                      description: 현재 상태 (N - 거절됨,  ND - 확인중)
# 5. 보낸 초대 목록 가져오기
  /chat/invitation/sent:
    get:
      summary: 보낸 채팅방 초대 목록 가져오기
      tags: [Chat]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      responses:
        200:
          description: 보낸 방 초대 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    target:
                      $ref: "#/components/schemas/user"
                    room:
                      $ref: "#/components/schemas/room"
                    curStatus:
                      type: string
                      description: 현재 상태 (N - 거절됨,  ND - 확인중)
# 6. 초대 승락
  /chat/invitation:
    post:
      summary: 방 초대 승락
      tags: [Chat]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                senderId:
                  type: string
                  description: 보낸 사람 로그인 아이디
                roomId:
                  type: string
                  description: 초대받은 방 아이디
      responses:
        200:
          description: 입장 성공
# 7. 초대 거절
    put:
      summary: 방 초대 거절
      tags: [Chat]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                senderId:
                  type: string
                  description: 보낸 사람 로그인 아이디
                roomId:
                  type: string
                  description: 초대받은 방 아이디
      responses:
        200:
          description: 성공
# 8. 초대 삭제
    delete:
      summary: 초대 삭제
      tags: [Chat]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                senderId:
                  type: string
                  description: 보낸 사람 로그인 아이디
                roomId:
                  type: string
                  description: 초대 받은 방 아이디
      responses:
        200:
          description: 성공
###### TAG AUTH ######
# 1. 회원가입
  /auth:
    post:
      summary: 회원가입
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/newuser"
      responses:
        200:
          description: 회원 가입 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
# 2. 프로필 수정
    put:
      summary: 프로필 변경
      tags: [User]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/profile"
      responses:
        200:
          description: 변경 성공
# 3. 로그인
  /auth/login:
    post:
      summary: 로그인
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: 로그인 아이디
                password:
                  type: string
                  description: 패스워드
      responses:
        200:
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/user"
                  accessToken:
                    type: string
# 4. 로그아웃
  /auth/logout:
    get:
      summary: 로그아웃
      tags: [Auth]
      responses:
        200:
          description: 로그아웃 성공
# 5. TOKEN 재 발급
  /auth/refresh_token:
    get:
      summary: token 재 발급
      tags: [Auth]
      responses:
        200:
          description: token 재 발급 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: brand new token
###### TAG USER ######
# 1. 부분 문자열로 검색된 유저 정보 목록 가져오기
  /user:
    get:
      summary: userId (부분 문자열)을 포함한 유저 정보 리스트 조회
      tags: [User]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
        - in: query
          name: userId
          schema:
            type: string
          required: true
          description: 검색하는 아이디 부분 문자열
      responses:
        200:
          description: 유저 검색 결과 리스트
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user"
  /user/request/got:
    get:
      summary: 받은 친구 요청 목록
      tags: [User]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      responses:
        200:
          description:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user"
  /user/request/sent:
    get:
      summary: 보낸 친구 요청 목록
      tags: [User]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      responses:
        200:
          description:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user"
  /user/request:
    put:
      summary: 친구 요청 거절
      tags: [User]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                senderId:
                  type: string
                  description: 요청을 보낸 유저 아이디
    delete:
      summary: 친구 요청 삭제
      tags: [User]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                senderId:
                  type: string
                  description: 요청을 보낸 유저 아이디
  /user/friend:
    get:
      summary: 친구 목록 가져오기
      tags: [User]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      responses:
        200:
          description: 친구 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user"
    post:
      summary: 친구 추가 (친구 요청 수락)
      tags: [User]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                senderId:
                  type: string
                  description: 요청 보낸 사람 로그인 아이디
      responses:
        200:
          description: 친구 추가 성공
    delete:
      summary: 친구 삭제
      tags: [User]
      parameters:
        - in: header
          name: access_token
          schema:
            type: string
          description: JWT 토큰
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                friendId:
                  type: string
                  description: 친구 로그인 아이디
      responses:
        200:
          description: 성공
components:
  schemas:
    room:
      type: object
      properties:
        _id:
          type: string
        roomName:
          type: string
        regDate:
          type: string
        users:
          type: array
          items:
            $ref: "#/components/schemas/user"
        chatHistory:
          $ref: "#/components/schemas/chatHistory"
    user:
      type: object
      properties:
        userId:
          type: string
          description: 로그인 아이디
        nickname:
          type: string
          description: 닉네임
        avatarUrl:
          type: string
          description: 프사
        statusMessage:
          type: string
          description: 상태 메세지
    chatHistory:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            description: 채팅 로그 고유 번호
          message:
            type: string
            description: 채팅 메시지 내용
          regDate:
            type: string
            description: 등록일
          userId:
            type: string
            description: 유저 아이디
    newuser:
      type: object
      properties:
        userId:
          type: string
          description: 로그인 아이디
        password:
          type: string
          description: 로그인 패스워드
        nickname:
          type: string
          description: 닉네임
        avatarUrl:
          type: string
          description: 프사
        statusMessage:
          type: string
          description: 상태 메세지
    friendList:
      type: array
      items:
        $ref: "#/components/schemas/user"
    profile:
      type: object
      properties:
        nickname:
          type: string
          description: 닉네임
        avatarUrl:
          type: string
          description: 프사
        statusMessage:
          type: string
          description: 상태 메세지
